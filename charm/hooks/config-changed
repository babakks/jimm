#!/usr/bin/python3

import os
from charmhelpers.core import (
    hookenv,
    templating,
)
from jaascharm import (
    HTTP_LISTEN_PORT,
    update_config_and_restart,
    update_status,
    dashboard_path,
    dashboard_resource_nonempty,
)
from status import charm_status


def config_changed():
    config = hookenv.config()

    keys = [
        "agent-username",
        "charmstore-location",
        "controller-uuid",
        "controller-url",
        "dbname",
        "domain",
        "gui-location",
        "identity-location",
        "logging-level",
        "max-mgo-sessions",
        "metering-location",
        "public-dns-name",
    ]

    admins = [admin.strip() for admin in config['controller-admins'].split(",")]
    app_config = {
        'api-addr': ':{}'.format(HTTP_LISTEN_PORT),
        'controller-admins': admins,
    }
    if len(admins) > 0:
        app_config['state-server-admin'] = admins[0]

    if config['agent-private-key'] and config['agent-public-key']:
        app_config['agent-key'] = {
            'private': config['agent-private-key'].strip(),
            'public': config['agent-public-key'].strip(),
        }

    if config['juju-dashboard-location']:
        app_config['juju-dashboard-location'] = config['juju-dashboard-location']
    elif os.path.exists(dashboard_path()):
        app_config['juju-dashboard-location'] = dashboard_path()

    for key in keys:
        app_config[key] = config[key]

    """Update the config.js file for the Juju Dashboard.
    """
    if dashboard_resource_nonempty() and os.path.exists(dashboard_path()):
        config_js_path = os.path.join(dashboard_path(), 'config.js')
        dashboard_context = {
            'base_controller_url': app_config['controller-url'],
            'base_app_url': '/',
            'identity_provider_available': str(len(app_config['identity-location']) != 0).lower(),
        }
        templating.render(
            'dashboard-config',
            config_js_path,
            dashboard_context
        )

    update_config_and_restart(app_config)


if __name__ == '__main__':
    config_changed()
    update_status(failed_status=charm_status)
